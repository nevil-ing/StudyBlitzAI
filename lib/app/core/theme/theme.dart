import "package:flutter/material.dart";

class MaterialTheme {
  final TextTheme textTheme;

  const MaterialTheme(this.textTheme);

  static ColorScheme lightScheme() {
    return const ColorScheme(
      brightness: Brightness.light,
      primary: Color(0xff31628d),
      surfaceTint: Color(0xff31628d),
      onPrimary: Color(0xffffffff),
      primaryContainer: Color(0xffcfe5ff),
      onPrimaryContainer: Color(0xff001d33),
      secondary: Color(0xff526070),
      onSecondary: Color(0xffffffff),
      secondaryContainer: Color(0xffd5e4f7),
      onSecondaryContainer: Color(0xff0e1d2a),
      tertiary: Color(0xff695779),
      onTertiary: Color(0xffffffff),
      tertiaryContainer: Color(0xffefdbff),
      onTertiaryContainer: Color(0xff231533),
      error: Color(0xffba1a1a),
      onError: Color(0xffffffff),
      errorContainer: Color(0xffffdad6),
      onErrorContainer: Color(0xff410002),
      surface: Color(0xfff7f9ff),
      onSurface: Color(0xff181c20),
      onSurfaceVariant: Color(0xff42474e),
      outline: Color(0xff72777f),
      outlineVariant: Color(0xffc2c7cf),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xff2d3135),
      inversePrimary: Color(0xff9ccbfb),
      primaryFixed: Color(0xffcfe5ff),
      onPrimaryFixed: Color(0xff001d33),
      primaryFixedDim: Color(0xff9ccbfb),
      onPrimaryFixedVariant: Color(0xff114a73),
      secondaryFixed: Color(0xffd5e4f7),
      onSecondaryFixed: Color(0xff0e1d2a),
      secondaryFixedDim: Color(0xffb9c8da),
      onSecondaryFixedVariant: Color(0xff3a4857),
      tertiaryFixed: Color(0xffefdbff),
      onTertiaryFixed: Color(0xff231533),
      tertiaryFixedDim: Color(0xffd4bee6),
      onTertiaryFixedVariant: Color(0xff504061),
      surfaceDim: Color(0xffd8dae0),
      surfaceBright: Color(0xfff7f9ff),
      surfaceContainerLowest: Color(0xffffffff),
      surfaceContainerLow: Color(0xfff2f3f9),
      surfaceContainer: Color(0xffeceef4),
      surfaceContainerHigh: Color(0xffe6e8ee),
      surfaceContainerHighest: Color(0xffe0e2e8),
    );
  }

  ThemeData light() {
    return theme(lightScheme());
  }

  static ColorScheme lightMediumContrastScheme() {
    return const ColorScheme(
      brightness: Brightness.light,
      primary: Color(0xff09466f),
      surfaceTint: Color(0xff31628d),
      onPrimary: Color(0xffffffff),
      primaryContainer: Color(0xff4978a4),
      onPrimaryContainer: Color(0xffffffff),
      secondary: Color(0xff364453),
      onSecondary: Color(0xffffffff),
      secondaryContainer: Color(0xff687686),
      onSecondaryContainer: Color(0xffffffff),
      tertiary: Color(0xff4c3c5c),
      onTertiary: Color(0xffffffff),
      tertiaryContainer: Color(0xff7f6d91),
      onTertiaryContainer: Color(0xffffffff),
      error: Color(0xff8c0009),
      onError: Color(0xffffffff),
      errorContainer: Color(0xffda342e),
      onErrorContainer: Color(0xffffffff),
      surface: Color(0xfff7f9ff),
      onSurface: Color(0xff181c20),
      onSurfaceVariant: Color(0xff3e434a),
      outline: Color(0xff5a5f66),
      outlineVariant: Color(0xff767b82),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xff2d3135),
      inversePrimary: Color(0xff9ccbfb),
      primaryFixed: Color(0xff4978a4),
      onPrimaryFixed: Color(0xffffffff),
      primaryFixedDim: Color(0xff2e5f8a),
      onPrimaryFixedVariant: Color(0xffffffff),
      secondaryFixed: Color(0xff687686),
      onSecondaryFixed: Color(0xffffffff),
      secondaryFixedDim: Color(0xff4f5d6d),
      onSecondaryFixedVariant: Color(0xffffffff),
      tertiaryFixed: Color(0xff7f6d91),
      onTertiaryFixed: Color(0xffffffff),
      tertiaryFixedDim: Color(0xff665577),
      onTertiaryFixedVariant: Color(0xffffffff),
      surfaceDim: Color(0xffd8dae0),
      surfaceBright: Color(0xfff7f9ff),
      surfaceContainerLowest: Color(0xffffffff),
      surfaceContainerLow: Color(0xfff2f3f9),
      surfaceContainer: Color(0xffeceef4),
      surfaceContainerHigh: Color(0xffe6e8ee),
      surfaceContainerHighest: Color(0xffe0e2e8),
    );
  }

  ThemeData lightMediumContrast() {
    return theme(lightMediumContrastScheme());
  }

  static ColorScheme lightHighContrastScheme() {
    return const ColorScheme(
      brightness: Brightness.light,
      primary: Color(0xff00243e),
      surfaceTint: Color(0xff31628d),
      onPrimary: Color(0xffffffff),
      primaryContainer: Color(0xff09466f),
      onPrimaryContainer: Color(0xffffffff),
      secondary: Color(0xff152331),
      onSecondary: Color(0xffffffff),
      secondaryContainer: Color(0xff364453),
      onSecondaryContainer: Color(0xffffffff),
      tertiary: Color(0xff2a1c3a),
      onTertiary: Color(0xffffffff),
      tertiaryContainer: Color(0xff4c3c5c),
      onTertiaryContainer: Color(0xffffffff),
      error: Color(0xff4e0002),
      onError: Color(0xffffffff),
      errorContainer: Color(0xff8c0009),
      onErrorContainer: Color(0xffffffff),
      surface: Color(0xfff7f9ff),
      onSurface: Color(0xff000000),
      onSurfaceVariant: Color(0xff1f242a),
      outline: Color(0xff3e434a),
      outlineVariant: Color(0xff3e434a),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xff2d3135),
      inversePrimary: Color(0xffe0edff),
      primaryFixed: Color(0xff09466f),
      onPrimaryFixed: Color(0xffffffff),
      primaryFixedDim: Color(0xff002f4e),
      onPrimaryFixedVariant: Color(0xffffffff),
      secondaryFixed: Color(0xff364453),
      onSecondaryFixed: Color(0xffffffff),
      secondaryFixedDim: Color(0xff202e3c),
      onSecondaryFixedVariant: Color(0xffffffff),
      tertiaryFixed: Color(0xff4c3c5c),
      onTertiaryFixed: Color(0xffffffff),
      tertiaryFixedDim: Color(0xff352645),
      onTertiaryFixedVariant: Color(0xffffffff),
      surfaceDim: Color(0xffd8dae0),
      surfaceBright: Color(0xfff7f9ff),
      surfaceContainerLowest: Color(0xffffffff),
      surfaceContainerLow: Color(0xfff2f3f9),
      surfaceContainer: Color(0xffeceef4),
      surfaceContainerHigh: Color(0xffe6e8ee),
      surfaceContainerHighest: Color(0xffe0e2e8),
    );
  }

  ThemeData lightHighContrast() {
    return theme(lightHighContrastScheme());
  }

  static ColorScheme darkScheme() {
    return const ColorScheme(
      brightness: Brightness.dark,
      primary: Color(0xff9ccbfb),
      surfaceTint: Color(0xff9ccbfb),
      onPrimary: Color(0xff003354),
      primaryContainer: Color(0xff114a73),
      onPrimaryContainer: Color(0xffcfe5ff),
      secondary: Color(0xffb9c8da),
      onSecondary: Color(0xff243240),
      secondaryContainer: Color(0xff3a4857),
      onSecondaryContainer: Color(0xffd5e4f7),
      tertiary: Color(0xffd4bee6),
      onTertiary: Color(0xff392a49),
      tertiaryContainer: Color(0xff504061),
      onTertiaryContainer: Color(0xffefdbff),
      error: Color(0xffffb4ab),
      onError: Color(0xff690005),
      errorContainer: Color(0xff93000a),
      onErrorContainer: Color(0xffffdad6),
      surface: Color(0xff181c20),
      onSurface: Color(0xffe2e2e6),
      onSurfaceVariant: Color(0xffc2c7cf),
      outline: Color(0xff8c9198),
      outlineVariant: Color(0xff42474e),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xffe2e2e6),
      inversePrimary: Color(0xff31628d),
      primaryFixed: Color(0xff31628d),
      onPrimaryFixed: Color(0xffffffff),
      primaryFixedDim: Color(0xff21608e),
      onPrimaryFixedVariant: Color(0xffffffff),
      secondaryFixed: Color(0xff526070),
      onSecondaryFixed: Color(0xffffffff),
      secondaryFixedDim: Color(0xff415a6e),
      onSecondaryFixedVariant: Color(0xffffffff),
      tertiaryFixed: Color(0xff695779),
      onTertiaryFixed: Color(0xffffffff),
      tertiaryFixedDim: Color(0xff503f61),
      onTertiaryFixedVariant: Color(0xffffffff),
      surfaceDim: Color(0xff181c20),
      surfaceBright: Color(0xff3b3f45),
      surfaceContainerLowest: Color(0xff0d0f12),
      surfaceContainerLow: Color(0xff121417),
      surfaceContainer: Color(0xff15191d),
      surfaceContainerHigh: Color(0xff171b1f),
      surfaceContainerHighest: Color(0xff1d2127),
    );
  }

  ThemeData dark() {
    return theme(darkScheme());
  }

  static ColorScheme darkMediumContrastScheme() {
    return const ColorScheme(
      brightness: Brightness.dark,
      primary: Color(0xff87b2e1),
      surfaceTint: Color(0xff9ccbfb),
      onPrimary: Color(0xff003354),
      primaryContainer: Color(0xff004a78),
      onPrimaryContainer: Color(0xffb5d4fa),
      secondary: Color(0xff8fa6b9),
      onSecondary: Color(0xff1a2e42),
      secondaryContainer: Color(0xff32495a),
      onSecondaryContainer: Color(0xffd0e4ff),
      tertiary: Color(0xffbbaac9),
      onTertiary: Color(0xff352a47),
      tertiaryContainer: Color(0xff4c405e),
      onTertiaryContainer: Color(0xffe7d9fa),
      error: Color(0xffffb4ab),
      onError: Color(0xff690005),
      errorContainer: Color(0xff93000a),
      onErrorContainer: Color(0xffffdad6),
      surface: Color(0xff181c20),
      onSurface: Color(0xffe2e2e6),
      onSurfaceVariant: Color(0xffc2c7cf),
      outline: Color(0xff8c9198),
      outlineVariant: Color(0xff42474e),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xffe2e2e6),
      inversePrimary: Color(0xff31628d),
      primaryFixed: Color(0xff114a73),
      onPrimaryFixed: Color(0xffffffff),
      primaryFixedDim: Color(0xff003354),
      onPrimaryFixedVariant: Color(0xffffffff),
      secondaryFixed: Color(0xff3a4857),
      onSecondaryFixed: Color(0xffffffff),
      secondaryFixedDim: Color(0xff233545),
      onSecondaryFixedVariant: Color(0xffffffff),
      tertiaryFixed: Color(0xff504061),
      onTertiaryFixed: Color(0xffffffff),
      tertiaryFixedDim: Color(0xff392a49),
      onTertiaryFixedVariant: Color(0xffffffff),
      surfaceDim: Color(0xff181c20),
      surfaceBright: Color(0xff3b3f45),
      surfaceContainerLowest: Color(0xff0d0f12),
      surfaceContainerLow: Color(0xff121417),
      surfaceContainer: Color(0xff15191d),
      surfaceContainerHigh: Color(0xff171b1f),
      surfaceContainerHighest: Color(0xff1d2127),
    );
  }

  ThemeData darkMediumContrast() {
    return theme(darkMediumContrastScheme());
  }

  static ColorScheme darkHighContrastScheme() {
    return const ColorScheme(
      brightness: Brightness.dark,
      primary: Color(0xff7299c6),
      surfaceTint: Color(0xff9ccbfb),
      onPrimary: Color(0xff00263b),
      primaryContainer: Color(0xff003653),
      onPrimaryContainer: Color(0xff8fb7e1),
      secondary: Color(0xff738b9f),
      onSecondary: Color(0xff12222f),
      secondaryContainer: Color(0xff293846),
      onSecondaryContainer: Color(0xffcfe2f8),
      tertiary: Color(0xff988daf),
      onTertiary: Color(0xff22162e),
      tertiaryContainer: Color(0xff392d45),
      onTertiaryContainer: Color(0xffd0bfee),
      error: Color(0xffffb4ab),
      onError: Color(0xff690005),
      errorContainer: Color(0xff93000a),
      onErrorContainer: Color(0xffffdad6),
      surface: Color(0xff181c20),
      onSurface: Color(0xffe2e2e6),
      onSurfaceVariant: Color(0xffc2c7cf),
      outline: Color(0xff8c9198),
      outlineVariant: Color(0xff42474e),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xffe2e2e6),
      inversePrimary: Color(0xff31628d),
      primaryFixed: Color(0xff003653),
      onPrimaryFixed: Color(0xffffffff),
      primaryFixedDim: Color(0xff002f4e),
      onPrimaryFixedVariant: Color(0xffffffff),
      secondaryFixed: Color(0xff293846),
      onSecondaryFixed: Color(0xffffffff),
      secondaryFixedDim: Color(0xff1d2b38),
      onSecondaryFixedVariant: Color(0xffffffff),
      tertiaryFixed: Color(0xff392d45),
      onTertiaryFixed: Color(0xffffffff),
      tertiaryFixedDim: Color(0xff2b1f37),
      onTertiaryFixedVariant: Color(0xffffffff),
      surfaceDim: Color(0xff181c20),
      surfaceBright: Color(0xff3b3f45),
      surfaceContainerLowest: Color(0xff0d0f12),
      surfaceContainerLow: Color(0xff121417),
      surfaceContainer: Color(0xff15191d),
      surfaceContainerHigh: Color(0xff171b1f),
      surfaceContainerHighest: Color(0xff1d2127),
    );
  }

  ThemeData darkHighContrast() {
    return theme(darkHighContrastScheme());
  }

  ThemeData theme(ColorScheme colorScheme) => ThemeData(
    useMaterial3: true,
    brightness: colorScheme.brightness,
    colorScheme: colorScheme,
    textTheme: textTheme.apply(
      bodyColor: colorScheme.onSurface,
      displayColor: colorScheme.onSurface,
    ),
    iconTheme: IconThemeData(
      color: colorScheme.primary,
    ),
    scaffoldBackgroundColor: colorScheme.background,
    canvasColor: colorScheme.surface,
  );
}